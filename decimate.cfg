from cflshared.processutil import doExec, findExecutable

from decimate.projects import urlImport
from decimate.projects.otherbuilds import OtherBuildsTestConfiguration, TriggerHostingTestConfiguration
from decimate.projects.statuspublishing import StatusPublishingProject, StatusPublishingTestConfiguration, Status
from decimate.projects.git import GitTestConfiguration

import re

cflSvnRoot = "https://svn-dev.int.corefiling.com/svn/"
urlImport(cflSvnRoot + "devel/decimate/sharedConfigs/trunk/cfl.py", names=["ExpiringArchiveTestConfiguration", "PublishedReleasesTestConfiguration"])


class RickshawProject(StatusPublishingProject):
   name = "Rickshaw"
   category = "PD/Libraries/Decimate"

   def getTestConfigurations(self):
       return [Build("Build", platform="linux2"), PublishedReleases("Published Releases")]


class Build(StatusPublishingTestConfiguration, GitTestConfiguration, ExpiringArchiveTestConfiguration, TriggerHostingTestConfiguration):
    gitUrls = [{"repos": "https://github.com/paulcadman/rickshaw", "branch": "cfl", "to": "rickshaw"}]
    publishFilesBase = "rickshaw"
    publishFiles = ["*.js", "*.css"]
    triggerableBuilds = [("Rickshaw", "Published Releases")]

    def canRunHere(self, work):
        if not findExecutable("npm"):
            raise CantRunHereException("Need Node.js framework & npm to run (sudo yum install npm)")
        return super(Build, self).canRunHere(work)

    def runTests(self):
        doExec(["make"], cwd="rickshaw", expectedReturnCode=0)
        return Status.OK


class PublishedReleases(PublishedReleasesTestConfiguration):
    def runTests(self):
        self.setVersionNumber(re.sub("-g[0-9a-f]+$", "", self.buildNumber))
        return super(PublishedReleases, self).runTests()
